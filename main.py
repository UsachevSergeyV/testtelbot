import telebot
import time
f = open("token", 'r')
bot = telebot.TeleBot(f.readline())
f.close()

#–Ω–∞–±–æ—Ä—ã —Å—Ç–∏–∫–µ—Ä–æ–≤
sticker_set_name = "TidyTieTom"
# –ü–æ–ª—É—á–∞–µ–º –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤
sticker_set = bot.get_sticker_set(sticker_set_name)
sticker = sticker_set.stickers[19]
sticker_id = sticker.file_id
print(sticker_id)


#–î–µ–ª–∞–µ–º –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫
keyboard = telebot.types.InlineKeyboardMarkup()
button1 = telebot.types.InlineKeyboardButton("YES", callback_data="yes_callback_func")
button2 = telebot.types.InlineKeyboardButton("NO", callback_data="no_callback_func")
button3 = telebot.types.InlineKeyboardButton("DISABLE", callback_data="NO_DIS" )
keyboard.add(button1, button2,button3)

#–î–µ–ª–∞–µ–º —Ä–µ–ø–ª–∞–π –∫–Ω–æ–ø–∫–∏
keyboardInline = telebot.types.ReplyKeyboardMarkup()
button3 = telebot.types.InlineKeyboardButton("Fitst button")
button4 = telebot.types.InlineKeyboardButton("Second button")
keyboardInline.add(button3, button4)



#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∏–ø–æ–º text
@bot.message_handler(content_types=['text'])
def functionHandlerText(message):
    if message.text=="–í–æ–ø—Ä–æ—Å":
        bot.send_message(chat_id=message.from_user.id,text="–û—Ç–≤–µ—Ç")
    if message.text.isnumeric():
        if message.text=='111':
            #–ö–Ω–æ–ø–∫–∏ –ø–æ –Ω–∞–∂–∞—Ç–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è callback —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ
            bot.send_message(chat_id=message.from_user.id,text="–ü–æ–ª—É—á–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é",reply_markup=keyboard)

        if message.text=='222':
            #–ö–Ω–æ–ø–∫–∏ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –±—É–¥—É—Ç –∫–∏–¥–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç –≤ —á–∞—Ç –∫–∞–∫–æ–µ —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ
            bot.send_message(chat_id=message.from_user.id,text="–ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–ª–∞–π –∫–Ω–æ–ø–∫–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é",reply_markup=keyboardInline)


#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–∏–Ω–µ —Ç–∏–ø–∞ document
@bot.message_handler(content_types=['document'])
def functionHandlerText2(message):
    if str(message.caption).startswith("–í–æ–ø—Ä–æ—Å"):
        bot.send_message(chat_id=message.from_user.id,text="–û—Ç–≤–µ—Ç2")

#–ö–æ–ª–±—ç–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≤–∏–¥–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–∏
@bot.callback_query_handler(func=lambda call: call.data == 'yes_callback_func')
def yes_callback_def(call):
    bot.send_message(call.message.chat.id, '–û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É yes', reply_to_message_id=call.message.id-1)
@bot.callback_query_handler(func=lambda call: call.data == 'no_callback_func')
def yes_callback_def(call):
    #—É–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
    bot.edit_message_reply_markup(call.message.chat.id, call.message.id, reply_markup=None)
    #–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    bot.edit_message_text(chat_id=call.message.chat.id,message_id= call.message.id, text="–í—ã—á–∏—Å–ª—è–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è üîÑ ‚öôÔ∏è ‚åõÔ∏è  ‚úÖ ‚ùå")
    #—à–ª–µ–º —Å—Ç–∏–∫–µ—Ä
    messageSticrer = bot.send_sticker(chat_id=call.message.chat.id, sticker=sticker_id)

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–æ–±—â–µ –Ω–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ - –ø—Ä–∏ —ç—Ç–æ–º –ø–æ—Ç–æ–∫ —É–º–∏—Ä–∞–µ—Ç, —Ç–∞–∫ –∂–µ —É–¥–∞–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
    time.sleep(5)
    bot.delete_message(chat_id=call.message.chat.id, message_id=messageSticrer.id)
    bot.delete_message(chat_id=call.message.chat.id,message_id= call.message.id)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.send_message(call.message.chat.id, '–û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É no', reply_to_message_id=call.message.id-1)
bot.polling(none_stop=True, interval=0)





